Created a folder and used cmd cd command to open cmd in this folder.
Used git clone < > to clone git repo. in this location.
in vs code, open new terminal and click right + and select git bash

-------------
next step is to create a conda environment : lets take name a venv ( means virtual environment ) 
check readme file

py -3 -m venv <name of environment>

now after creation, we also need t0 activate this virtual environment
<name of environment>\Scripts\activate



-----------
creation of requirements.txt file
to install mentioned packages of requirements.txt : use pip install -r requirements.txt

To Run any flask application
flask run   

-----------

now we have to save this changes into github:
now we dont need to send the venv file in github as thats hige, so to ignore this file to  be sent
in github : add this file into gitignore
(its already added into gitignore)

Follow these commands in cmd terminal to check git :

git status
this will tell whic files are to be tracked and untracked in git

git add <filename>
to add individual files : this will add mentioned file in git

git add .
to add all untracked files in git

BUT now after adding we also need to commit : commit is like saving the version

git log
to see all the previous version in git 


To COMMIT changes to git
git commit -m "message"
message is the text u will see in git log for this particular commit

git push -u origin branch_name_that_you_want_to_push
to send version/changes to github
After executing the above command, it will ask for a password. Provide your updated password.


git remote -v
to check the fetch and push url of our git project

----------------------
now next step is to connect github to heroku

To setup CI/CD pipeline in heroku we need 3 information : 
1. HEROKU_EMAIL : rktripathi710@gmail.com
2. HEROKU_API_KEY : 8069e479-7324-4ab0-9a12-c8687f974bc0
( for api key go to heroku my profile and in bottom there is the api key mentioned)
3. HEROKU_APP_NAME : mlprojj ( name of app on heroku)


--------------------

now next step is to create a DOCKER file
just create a new file named "Dockerfile"
also , 
create a .dockerignore file to set files which docker is going to ignore


BUILD DOCKER IMAGE
```
docker build -t <image_name>:<tagname> .
```
note : name of image must be in lowercase

DOCKER IS NOT REQUIRED AT THIS TIME
FURTHER DOCKER CODE IS PRESENT IN  12 JUNE CLASS

-----------------------

for final deployment : create a folder .github
in this create a folder <workflows>
in this folder create a file <main.yaml>

code is mentioned there, further go to github project settings and there in secrets, there we need to manage
our heroku secrets so that app could be deployed
(new repository secret )

In github at too menu u can see actions : there we can see if there are any issues in ci/CD
after fixing that we can re run jobs from there only and see things getting deployed to heroku

now on heroku if we click run app, app is up and running
